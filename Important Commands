#####Kubernets Basic Commands:
     Kubectl  version
#####NameSpace
      kubectl create namespace <namespace>
      kubectl delete namespace <namespace>

####NODE
        Kubectl cordon <nodename>  ###Changes the node to unschedulling
        Kubectl uncordon <nodename>  #######Changes the node to scheduling back
        Kubectl drain <nodename>   #####Drain the node for maintenance
        Kubectl get cluster-info   
        Kubectl get cluster-info dump
        Kubectl describe nodes  <nodename>
        
######2 Ways to create PODS as follows

	1.kubectl create	---    It requires yaml file  ---   Can create pods with multiple containers in each pod --  Deployment object is not automatically created but need to specify explicitly
                    Kubectl  create  -f  <file.yml>  --<namespace>   ----- command
	
	
	2.Kubectl run     -----    No yaml file is required ----- Can create  pods with only one container for each pod -- Deployment object is automatically created.(That means when you delete the pod the deployment object automatically creates the pod).So when you want to delete a POD, delete deployment first.
	          Kubectl run <mypod1> --image=nginx  --port=80  --replicas=2   -----  command
		  kubectl expose deployment  <deployementname> --LoadBalancer   ------ It creates service for deployment to acees the application outside the cluster.
	          kubectl expose rc example --port=8765 --target-port=9376 \ --name=example-service --type=LoadBalancer

#####POD Commands
  Kubcectl get pods    ####Displays the pods list
  Kubcectl get pod <podname>
  Kubectl describe pod  <pod name> ####Describes a particular pod
  Kubectl delete pods <podname> ###Delete the pod
  Kubectl get deploy ####Displays the deploy list
  kubectl get deployments <deploymentname>
  kubectl describe deployments  <deploymentname>
  kubectl get replicasets
  kubectl describe replicasets
  Kubectl delete deploy <deployname> ### Delete the deplpyment object
  Kubectl get pods  -o wide   ####To list the IP of pods
  Kubectl logs <podname>
  kubectl get pods --output=wide   ### To check the pods and the nodes they are  running on 
  kubectl scale --replicas=1 Deployment/<deploymentname> ####To scale out and scale in the pod replicas 
  kubectl get service <sevicename> 
  kubectl describe service <servicename>  
  
